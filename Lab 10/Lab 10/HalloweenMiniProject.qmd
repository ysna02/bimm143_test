---
title: "Class 10: Halloween Mini-Project"
author: "Youn Soo Na (PID: A17014731)"
format: pdf
---

Import candy data

```{r}
candy <- read.csv("candy-data.csv", row.names=1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Haribo Gold Bears", ]$winpercent

# candy %>% 
#   filter(rownames(candy)=="Haribo Gold Bears") %>% 
#   select(winpercent)

```

> Q3a. Find fruity candy with a winpercent above 50%

```{r}
library(dplyr)
candy %>% 
  filter(winpercent >= 50) %>% 
  filter(fruity==1)
```


> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", ]$winpercent
```

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy[
  "Tootsie Roll Snack Bars", 
]$winpercent
```

Side-note: the skimr::`skim()` function

```{r}
library(skimr)
skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

Yes, winpercent looks to be on a different scale to the majority of the other columns in the dataset.
This requires me to scale my data before doing any analysis like PCA etc.

> Q7. What do you think a zero and one represent for the candy$chocolate column?

```{r}
candy$chocolate
```

It represents T or F in a logical variable. 



> Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent, breaks=30)
```

```{r}
library(ggplot2)

ggplot(candy, aes(winpercent,)) +
         geom_histogram(fill="black", color="white", binwidth = 5)
```

> Q9. Is the distribution of winpercent values symmetrical?

NO

>Q10. Is the center of the distribution above or below 50%?

```{r}
summary(candy$winpercent)
```
The center of the distribution, also shown as the median, is below 50%.

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
fruit_candy <- candy %>% 
  filter(fruity==1)

summary(fruit_candy$winpercent)

chocolate_candy <- candy %>% 
  filter(chocolate==1)

summary(chocolate_candy$winpercent)

# base R code for the one above
# summary(candy[as.logical(candy$chocolate),]$winpercent)
```
Chocolate cady is higher ranked than fruit candy, on average. 

> Q12. Is this difference statistically significant?

```{r}
t.test(chocolate_candy$winpercent, fruit_candy$winpercent)
```
The difference is statistically significant.    

> Q13. What are the five least liked candy types in this set?


```{r}
play <- c("d", "a", "c")
sort(play)
order(play)
```
`sort()` organises the output in order, but `order()` is more useful because it specifically shows you the ranking position of the variable (candy) 

```{r}
head( candy[order(candy$winpercent), ], 5)
```



> Q14. What are the top 5 all time favorite candy types out of this set?


```{r}
tail( candy[order(candy$winpercent), ], 5)
```
```{r}
head( candy[order(candy$winpercent, decreasing = T), ], 5)
```

Let's do a barplot of winpercent values

> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy, aes(x = winpercent, y = reorder(row.names(candy), winpercent), fill = chocolate)) +
  geom_col() +
  labs(y="Candy Name") +
  theme(axis.text.y = element_text(size = 4))
```

I want a more custom color scheme where I can see both chocolate and bar and fruity etc. all from the one plot. To do this we can roll our own color vector...

```{r}
library(wesanderson)
# Place holder color vector
# rep() 
mycols <- rep("black", nrow(candy))
# I want 2nd entry of my dataset to be blue

mycols[as.logical(candy$bar)] <-  "brown"
mycols[as.logical(candy$chocolate)] <- "chocolate"
mycols[as.logical(candy$fruity)] <-  "pink"


# Use blue for your favorite candy
rownames(candy) == "Haribo Gold Bears"
mycols[rownames(candy)=="Haribo Gold Bears"] <- "blue"

```




> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?


```{r}
ggplot(candy, 
       aes(x = winpercent, 
           y = reorder(rownames(candy), 
                       winpercent))) +
  geom_col(fill = mycols) +
  labs(y="Candy Name") +
  theme(axis.text.y = element_text(size = 4))
```

> Q17. What is the worst ranked chocolate candy?

Sixlets

> Q18. What is the best ranked fruity candy?

Starbursts

## Price Percent

Plot a winpercent vs pricepercent to see what would be the best candy to buy...

```{r}
mycols[as.logical(candy$fruity)] <- "lightgreen"
```

```{r}
ggplot(candy,
       aes(x = winpercent,
           y = pricepercent)) +
         geom_point(col = mycols)
```

add labels

```{r}
ggplot(candy,
       aes(x = winpercent,
           y = pricepercent,
           label = rownames(candy)
           )
       ) +
         geom_point(col = mycols) +
  geom_text(col = mycols)
```

Make the labels non-overlapping

```{r}
library(ggrepel)

ggplot(candy,
       aes(x = winpercent,
           y = pricepercent,
           label = rownames(candy)
           )
       ) +
         geom_point(col = mycols) +
  geom_text_repel(col = mycols)
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reese's minatures

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

Nik L Nip, Nestle Smarties, Ring Pop, Hershey's Krackel, Hershey's Milk Chocolate

```{r}
ord <- order(candy$pricepercent, decreasing = T)
head(candy[ord,c(11,12)], n = 5)
```

> Q21. Make a barplot again with geom_col() this time using pricepercent and then improve this step by step, first ordering the x-axis by value and finally making a so called “dot chat” or “lollipop” chart by swapping geom_col() for geom_point() + geom_segment().

```{r}
ggplot(candy, aes(x = pricepercent, y = reorder(row.names(candy), pricepercent))) +
  geom_point()+
  geom_segment(aes(xend = 0, yend = reorder(row.names(candy), pricepercent)), 
               color = "lightgreen")
```


## Correlation

```{r}
library(corrplot)
```
```{r}
cij <- cor(candy)
cij
corrplot(cij, diag = F)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and Fruity

> Q23. Similarly, what two variables are most positively correlated?

Variables that are identical, variable compared to themselves (i.e. Chocolate=Chocolate, fruity=fruity)
Other than that, Chocolate and bar or Chocolate and winpercent or bar and pricepercent or bar and nougat



## PCA

```{r}
pca <- prcomp(candy, scale. = TRUE)
summary(pca)
```
```{r}
plot(pca$x[,1], pca$x[,2], col=mycols, pch=16)
```

How do the original variable (columns) contribute to the new PCs? I will look at PC1 here:
```{r}
loadings <- as.data.frame(pca$rotation)

ggplot(loadings, aes(x = PC1,
                     y = reorder(rownames(loadings),
                                 PC1),
                     fill = PC1
                     )
       ) +
  geom_col()
```
> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?
Fruity, pluribus, and hard variables are picked up strongly by PC1 in the positive direction. This makes sense becuase it correlates to the previous correlation graph that told us the three variable, shown in the positive direction, positively correlate with each other. Similarly, variables "chocolate" and "bar" being heavily in the negative direction makes sense since the correlation graph told us that those two variables correlate with each other well. 

```{r}
plot(pca$x[,1:2], col=mycols, pch=16)

my_data <- cbind(candy, pca$x[,1:3])
```
```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=mycols)

p
```
```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=mycols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```
```{r}
library(plotly)
# ggplotly(p)
```



