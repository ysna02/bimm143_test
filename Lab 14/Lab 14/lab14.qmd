---
title: "Class 14: Mini Project"
author: "Youn Soo Na (PID: A17014731)"
format: gfm
---

## Data Import

```{r}
#| message: false
library(DESeq2)

cols <-  read.csv("GSE37704_metadata.csv", row.names=1)
counts <-  read.csv("GSE37704_featurecounts.csv", row.names=1)
head(cols)
head(counts)
```

```{r}
countData <- as.matrix(counts[,-1])
head(countData)
```

```{r}
# Filter count data where you have 0 read count across all samples.
countData <-  countData[rowSums(countData)!= 0, ]
head(countData)


# zero.vals <- which(countData[,1:2]==0, arr.ind=TRUE)
# 
# to.rm <- unique(zero.vals[,1])
# mycounts <- countData[-to.rm,]
# head(mycounts)
```







## DESeq setup

```{r}
dds <-  DESeqDataSetFromMatrix(countData=countData,
                             colData=cols,
                             design=~condition)
dds <-  DESeq(dds)
```

```{r}
dds
```

## DESeq analysis


Next, get results for the HoxA1 knockdown versus control siRNA


```{r}
res <-  results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
```

```{r}
summary(res)
```
27% upregulated
28% downregulated


## Result Visualisation

```{r}
plot( res$log2FoldChange, -log(res$padj),
      xlab="Log2(FoldChange)",
      ylab="-Log(P-value)")

abline(v=c(-2,2), col="red", lty=2)
abline(h=-log(0.05), col="red", lty=2)
```

Improved Plot

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$pvalue < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[inds] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```


## Add Annotation

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys=rownames(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=rownames(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```

Reorder by p-value

```{r}
res <-res[order(res$pvalue),]
write.csv(res, file ="deseq_results.csv")
```





## Pathway Analysis

```{r}
#| message: false
library(pathview)
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

```{r}
foldchanges <-  res$log2FoldChange
names(foldchanges) <-  res$entrez
head(foldchanges)
```

Get the results

```{r}
keggres = gage(foldchanges, gsets=kegg.sets.hs)
attributes(keggres)
head(keggres$less)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```
![Figure](hsa04110.pathview.png)

PDF based output with `kegg.native` = FALSE.
```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```


```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```


```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

![TOP 5 Pathway](hsa04640.pathview.png)
![](hsa04630.pathview.png)
![](hsa00140.pathview.png)
![](hsa04142.pathview.png)
![](hsa04330.pathview.png)
For downregulated

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathwaysless <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresidsless = substr(keggrespathwaysless, start=1, stop=8)
keggresidsless
```


```{r}
pathview(gene.data=foldchanges, pathway.id=keggresidsless, species="hsa")
```
![](hsa04110.pathview.png)
![](hsa03030.pathview.png)
![](hsa03013.pathview.png)
![](hsa03440.pathview.png)
![](hsa04114.pathview.png)

## Save Results

```{r}
write.csv(res, file = "myresults14.csv")
```


## Gene Ontology

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```

## Reactome Analysis


```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

> Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?


![Entities P-Value: 1.63E-4](Reactome.svg)

The pathway called Cell Cycle. It does match the most significant pathway listed from the previous KEGG result. 
Differences could be cause by errors or different database. 








